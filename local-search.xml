<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>LeetCode 2376. 统计特殊整数</title>
    <link href="/2022/08/15/LeetCode%202376.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%95%B4%E6%95%B0/"/>
    <url>/2022/08/15/LeetCode%202376.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%95%B4%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="数位DP-暴力-模板"><a href="#数位DP-暴力-模板" class="headerlink" title="数位DP | 暴力 | 模板"></a>数位DP | 暴力 | 模板</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h4><blockquote><p><strong>如果一个正整数每一个数位都是互不相同的,我们称它是特殊整数,给你一个正</strong><br><strong>整数 n ，请你返回区间 [1, n] 之间特殊整数的数目。</strong></p></blockquote><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1:"></a>示例 1:</h4><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tap">输入：n = 20<br>输出：19<br>解释：1 到<span class="hljs-number"> 20 </span>之间所有整数除了<span class="hljs-number"> 11 </span>以外都是特殊整数。所以总共有<span class="hljs-number"> 19 </span>个特殊整数。<br></code></pre></td></tr></table></figure><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf">输入：n <span class="hljs-operator">=</span> <span class="hljs-number">5</span><br>输出：<span class="hljs-number">5</span><br>解释：<span class="hljs-number">1</span> 到 <span class="hljs-number">5</span> 所有整数都是特殊整数。<br></code></pre></td></tr></table></figure><h4 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h4><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tap">输入：n = 135<br>输出：110<br>解释：从<span class="hljs-number"> 1 </span>到<span class="hljs-number"> 135 </span>总共有<span class="hljs-number"> 110 </span>个整数是特殊整数。<br>不特殊的部分数字为：22 ，114 和<span class="hljs-number"> 131 </span>。<br></code></pre></td></tr></table></figure><h4 id="数据范围："><a href="#数据范围：" class="headerlink" title="数据范围："></a>数据范围：</h4><ul><li>$1$ &lt;= $n$ &lt;= $2$ $*$ $10^{9}$</li></ul><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h4><h4 id="思路讲解"><a href="#思路讲解" class="headerlink" title="思路讲解"></a><a href="https://www.bilibili.com/video/BV1wv4y1c71n?spm_id_from=333.999.0.0&vd_source=bed1b37cf07540813685e4deaa965427">思路讲解</a></h4><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">countSpecialNumbers</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> </span>&#123;<br>        vector&lt;<span class="hljs-type">int</span>&gt; nums;<br>        <span class="hljs-keyword">while</span> (n) nums.<span class="hljs-built_in">push_back</span>(n % <span class="hljs-number">10</span>), n /= <span class="hljs-number">10</span>;<br>        <span class="hljs-type">int</span> res = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; nums.<span class="hljs-built_in">size</span>() ; i ++ ) &#123; <span class="hljs-comment">// 长度比 n 小的</span><br>            <span class="hljs-type">int</span> t = <span class="hljs-number">9</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>, u = <span class="hljs-number">9</span>; j &lt; i - <span class="hljs-number">1</span> ; j ++ , u -- )<br>                t *= u;<br>            res += t;<br>        &#125;<br>        <span class="hljs-comment">// cout &lt;&lt; res &lt;&lt; endl;</span><br>        <span class="hljs-built_in">reverse</span>(nums.<span class="hljs-built_in">begin</span>(), nums.<span class="hljs-built_in">end</span>());<br>        <span class="hljs-type">bool</span> st[<span class="hljs-number">10</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>() ; i ++ ) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = !i; j &lt; nums[i] ; j ++ ) &#123;<br>                <span class="hljs-keyword">if</span> (st[j]) <span class="hljs-keyword">continue</span>;<br>                <span class="hljs-type">int</span> t = <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>, u = <span class="hljs-number">9</span> - i; k &lt; nums.<span class="hljs-built_in">size</span>() - i - <span class="hljs-number">1</span> ; k ++ , u -- )<br>                <span class="hljs-comment">// 剩下k位，和u个数字可以填</span><br>                    t *= u;<br>                res += t;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (st[nums[i]]) <span class="hljs-keyword">break</span>; <span class="hljs-comment">// 和前面数字重复，那就没有这个分支了，退出</span><br>            st[nums[i]] = <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-function">set&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">hash</span><span class="hljs-params">(nums.begin(), nums.end())</span></span>; <span class="hljs-comment">// 枚举最后一条链</span><br>        <span class="hljs-keyword">if</span> (hash.<span class="hljs-built_in">size</span>() == nums.<span class="hljs-built_in">size</span>()) res ++ ;<br><br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h4><p>暴力枚举：<br>暴力也可以过，但不太好！$1804ms$<br>复杂度： <strong>$O((log_{10}n)!)$</strong><br>共有 <strong>$O(log_{10}n)$</strong> 个数位，故需要 <strong>$O((log_{10}n)!)$</strong> 的时间枚举。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> LL;<br>    <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>    LL m;<br>    <span class="hljs-type">int</span> vis[<span class="hljs-number">14</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(LL v)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (v &gt; m) <span class="hljs-keyword">return</span>;<br>        ans ++ ;<br>        <span class="hljs-comment">// cout &lt;&lt; v &lt;&lt; &quot; &quot;;</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span> ; i ++ ) &#123;<br>            <span class="hljs-keyword">if</span> (vis[i]) <span class="hljs-keyword">continue</span>;<br>            vis[i] = <span class="hljs-number">1</span>;<br>            <span class="hljs-built_in">dfs</span>(v * <span class="hljs-number">10</span> + i);<br>            vis[i] = <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">countSpecialNumbers</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> </span>&#123;<br>        m = n;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">10</span> ; i ++ ) &#123;<br>            vis[i] = <span class="hljs-number">1</span>;<br>            <span class="hljs-built_in">dfs</span>(i);<br>            vis[i] = <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux 常用命令</title>
    <link href="/2022/08/15/LIinux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/08/15/LIinux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h3 id="主要内容来源："><a href="#主要内容来源：" class="headerlink" title="主要内容来源："></a>主要内容来源：</h3><p><a href="https://www.acwing.com/activity/content/punch_the_clock/57/">AcWing_Linux_基础课</a></p><h4 id="常用命令介绍-y总总结"><a href="#常用命令介绍-y总总结" class="headerlink" title="常用命令介绍(y总总结)"></a>常用命令介绍(y总总结)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">(1) ctrl c: 取消命令，并且换行<br>(2) ctrl u: 清空本行命令<br>(3) tab键：可以补全命令和文件名，如果补全不了快速按两下tab键，可以显示备选选项<br>(4) <span class="hljs-built_in">ls</span>: 列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件<br>(5) <span class="hljs-built_in">pwd</span>: 显示当前路径<br>(6) <span class="hljs-built_in">cd</span> XXX: 进入XXX目录下, <span class="hljs-built_in">cd</span> .. 返回上层目录<br>(7) <span class="hljs-built_in">cp</span> XXX YYY: 将XXX文件复制成YYY，XXX和YYY可以是一个路径，比如../dir_c/a.txt，表示上层目录下的dir_c文件夹下的文件a.txt<br>(8) <span class="hljs-built_in">mkdir</span> XXX: 创建目录XXX<br>(9) <span class="hljs-built_in">rm</span> XXX: 删除普通文件;  <span class="hljs-built_in">rm</span> XXX -r: 删除文件夹<br>(10) <span class="hljs-built_in">mv</span> XXX YYY: 将XXX文件移动到YYY，和<span class="hljs-built_in">cp</span>命令一样，XXX和YYY可以是一个路径；重命名也是用这个命令<br>(11) <span class="hljs-built_in">touch</span> XXX: 创建一个文件<br>(12) <span class="hljs-built_in">cat</span> XXX: 展示文件XXX中的内容<br>(13) 复制文本<br>    windows/Linux下：Ctrl + insert，Mac下：<span class="hljs-built_in">command</span> + c<br>(14) 粘贴文本<br>    windows/Linux下：Shift + insert，Mac下：<span class="hljs-built_in">command</span> + v<br></code></pre></td></tr></table></figure><h4 id="自己总结"><a href="#自己总结" class="headerlink" title="自己总结"></a>自己总结</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">Shmilysw<br>一：绝对路径 从根开始描述这个路径(有<span class="hljs-string">&quot;/&quot;</span>)<br>二：相对路径 从当前路径开始来描述你的这个路径(无<span class="hljs-string">&quot;/&quot;</span>)<br>区别：看开头是不是有 <span class="hljs-string">&quot;/&quot;</span><br>/：根目录<br>..：上一级目录<br>.：当前目录<br>~/：hmoe目录<br>ctrl+c：跳过当前行<br>ctrl+u：清空当前行<br><span class="hljs-built_in">history</span>：显示历史操作<br>tab：自动补全命令或路径（只有一种选项，多种选项再按一次tab会显示可以补全的命令）<br><span class="hljs-built_in">ls</span>：显示当前文件夹下的文件<br>    <span class="hljs-built_in">ls</span> -l：显示详细信息<br>    <span class="hljs-built_in">ls</span> -lh：人性化输出(将详细信息里面的大小换成多少K)<br>    <span class="hljs-built_in">ls</span> -a：显示所有文件（包括隐藏文件）  ls-A：不显示当前目录和上层目录（.和..）<br><span class="hljs-built_in">cd</span>：进入一个路径<br>    <span class="hljs-built_in">cd</span> ..：返回上一层目录<br>    <span class="hljs-built_in">cd</span> -：返回到上一次操作所留在的目录(上一次所待过的地方)<br><span class="hljs-built_in">cp</span> a/tmp.txt b：把a文件夹下的tmp.txt复制到b文件夹<br>    <span class="hljs-built_in">cp</span> a/tmp.txt b/tmp1.txt：把a文件夹下的tmp.txt复制到b文件夹并且重命名为tmp1.txt<br>    <span class="hljs-built_in">cp</span> a b -r：把文件夹a复制到文件夹b中<br><span class="hljs-built_in">mkdir</span> a（路径也可以）：创建一个文件夹a<br>    <span class="hljs-built_in">mkdir</span> a/b/c：创建一个文件目录a/b/c<br><span class="hljs-built_in">rm</span> 文件1 文件2 文件3 ……：删除文件<br>    <span class="hljs-built_in">rm</span> 文件1 -r：删除文件夹<br>    <span class="hljs-built_in">rm</span> 文件夹1/*：删除文件夹1下的所有文件但不删除文件夹1<br><span class="hljs-built_in">touch</span> a：创建一个文件a<br><span class="hljs-built_in">mv</span> a/tmp.txt b：把a文件夹下的tmp.txt文件移动到b<br>    <span class="hljs-built_in">mv</span> a/tmp.txt b/tmp2.txt：把a文件夹下的tmp.txt文件移动到b并且重命名为tmp2.txt<br><span class="hljs-built_in">cat</span> 文件1：显示文件1的内容<br>vim 文件名：进入文件<br><br>复制文本：windows/Linux下：Ctrl + insert，Mac下：<span class="hljs-built_in">command</span> + c<br>粘贴文本：windows/Linux下：Shift + insert，Mac下：<span class="hljs-built_in">command</span> + v<br></code></pre></td></tr></table></figure><blockquote><p>作者：Shmilysw<br>链接：<a href="https://www.acwing.com/activity/content/code/content/3858182/">https://www.acwing.com/activity/content/code/content/3858182/</a><br>来源：AcWing</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/08/15/hello-world/"/>
    <url>/2022/08/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
